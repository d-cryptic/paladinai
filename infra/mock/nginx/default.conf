# Upstream backend servers (load balancing)
upstream backend_servers {
    least_conn;
    server backend-1:4000 weight=1 max_fails=3 fail_timeout=30s;
    server backend-2:4000 weight=1 max_fails=3 fail_timeout=30s;
}

# Main server configuration
server {
    listen 80;
    server_name localhost;

    # Enable stub status for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow all;  # In production, restrict this
    }

    # Frontend proxy
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Backend API with load balancing
    location /api/backend/ {
        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://backend_servers/api/backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Load balancing headers
        proxy_set_header X-Backend-Server $upstream_addr;
        proxy_set_header X-Backend-Status $upstream_status;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Retry on failure
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
        
        # Add response headers for debugging
        add_header X-Upstream-Server $upstream_addr always;
        add_header X-Upstream-Response-Time $upstream_response_time always;
        add_header X-Service "nginx-proxy" always;
    }

    # Health check endpoint
    location /health {
        access_log off;
        default_type application/json;
        return 200 '{"status":"healthy","service":"nginx"}';
    }

    # Metrics endpoint (for Prometheus nginx exporter)
    location /metrics {
        access_log off;
        proxy_pass http://localhost:9113/metrics;
    }

    # Error pages
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
}

# Nginx exporter for Prometheus
server {
    listen 9113;
    location /metrics {
        access_log off;
        stub_status on;
    }
}