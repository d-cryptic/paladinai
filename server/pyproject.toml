[project]
name = "paladin-server"
version = "0.1.0"
description = "FastAPI server component for Paladin AI monitoring platform"
readme = "../README.md"
requires-python = ">=3.13"
authors = [
    {name = "Barun Debnath", email = "barundebnath91@gmail.com"}
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-dotenv>=1.0.0",
    "langchain>=0.1.0",
    "langgraph>=0.1.0",
    "langfuse>=2.0.0",
    "pymongo>=4.6.0",
    "redis>=5.0.0",
    "rq>=1.15.0",
    "mem0ai>=0.1.0",
    "qdrant-client>=1.7.0",
    "neo4j>=5.15.0",
    "openai>=1.0.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/d-cryptic/paladin-ai"
Repository = "https://github.com/d-cryptic/paladin-ai"

[project.scripts]
paladin-server = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agents", "graph", "memory", "queue", "rag", "tools", "utils", "workflow"]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=term-missing"

[tool.flake8]
max-line-length = 120
ignore = ["E501", "W291", "W292"]
exclude = [".git", "__pycache__", ".pytest_cache"]
